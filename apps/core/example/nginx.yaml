kind: Deployment
apiVersion: apps/v1
metadata:
  name: nginx
  namespace: default
  labels:
    app: nginx
  annotations:
    argocd.argoproj.io/sync-wave: "100"
spec:
  replicas: 2
  progressDeadlineSeconds: 600
  revisionHistoryLimit: 2
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: default
  annotations:
    argocd.argoproj.io/sync-wave: "100"
spec:
  selector:
    app: nginx
  ports:
    - name: http
      targetPort: 80
      port: 80
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: nginx
  namespace: traefik
  annotations:
    kubernetes.io/ingress.class: traefik-external
    # external-dns.alpha.kubernetes.io/target: local.bhamm-lab.com
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "100"
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`example.com`) && PathPrefix(`/nginx`) #Host(`nginx.bhamm-lab.com`)
      kind: Rule
      services:
        - name: nginx
          port: 80
      middlewares:
        - name: default-headers
  tls:
    certResolver: default
  # tls:
  #   secretName: local-bhamm-lab-tls
